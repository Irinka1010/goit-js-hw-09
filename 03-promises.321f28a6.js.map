{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,WAAYJ,SAASC,cAAc,WAuBrC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA9BPT,EAAKM,WAAWW,iBAAiB,SAEjC,SAAsBC,GACpBA,EAAGC,iBAMH,IALA,IAAMC,EAASC,OAAOrB,EAAKK,YAAYiB,OACjCC,EAAaF,OAAOrB,EAAKC,WAAWqB,OACpCE,EAAOH,OAAOrB,EAAKI,UAAUkB,OAC/BG,EAAQF,EAEHG,EAAW,EAAGA,GAAYN,EAAQM,GAAY,EACrDnB,EAAcmB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBX,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBX,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAE9DgB,GAASD,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  buttonForm: document.querySelector('button'),\n};\nrefs.buttonForm.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(ev) {\n  ev.preventDefault();\n  const amount = Number(refs.inputAmount.value);\n  const firstDelay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n  let delay = firstDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","buttonForm","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","ev","preventDefault","amount","Number","value","firstDelay","step","delay1","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.321f28a6.js.map"}